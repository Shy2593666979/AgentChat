
# 🌐 网络配置
networks:
  agentchat-network:
    driver: bridge

services:
  # 🗄️ MySQL数据库服务
  mysql:
    container_name: agentchat-mysql
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: agentchat
      MYSQL_USER: agentchat_user
      MYSQL_PASSWORD: 123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - agentchat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 💾 Redis缓存服务  
  redis:
    image: redis:7.0-alpine
    container_name: agentchat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - redis_data:/data
    networks:
      - agentchat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 🔧 后端API服务
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: agentchat-backend
    restart: unless-stopped
    ports:
      - "7860:7860"
    environment:
      # 🗄️ 数据库配置
      DATABASE_URL: mysql://agentchat_user:123456@mysql:3306/agentchat
      REDIS_URL: redis://redis:6379/0
      
      # 🌍 应用配置
      APP_ENV: development
      LOG_LEVEL: info
      
      # 🔐 安全配置
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-in-production
      
      # 🤖 AI模型配置（请在.env文件中设置）
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      QWEN_API_KEY: ${QWEN_API_KEY:-}
      
      TZ: Asia/Shanghai
#    volumes:
#      - ../src/backend:/app:cached
#      - ../data:/app/data
#      - ../logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - agentchat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 🎨 前端开发服务
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
    container_name: agentchat-frontend
    restart: unless-stopped
    ports:
      - "8090:8090"
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: http://localhost:7860
      TZ: Asia/Shanghai
#    volumes:
#      - ../src/frontend:/app:cached
#      - /app/node_modules
    depends_on:
      - backend
    networks:
      - agentchat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090"]
      interval: 30s
      timeout: 10s
      retries: 3

# 💾 数据卷配置
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
